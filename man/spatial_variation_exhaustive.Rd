% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial_variation_exhaustive.R
\name{spatial_variation_exhaustive}
\alias{spatial_variation_exhaustive}
\title{Calculate Exhaustive Spatial Variation for a Matrix}
\usage{
spatial_variation_exhaustive(
  x,
  combine_orientations = TRUE,
  max_area = NULL,
  return_sums = FALSE
)
}
\arguments{
\item{x}{A numeric matrix or an object coercible to a numeric matrix.}

\item{combine_orientations}{A logical value. If `TRUE`, the function considers both
`rows x cols` and `cols x rows` window orientations.}

\item{max_area}{An optional numeric value specifying the maximum area of a window
to consider. If `NULL` (default), the maximum area is `rows * cols`.}

\item{return_sums}{A logical value. If `TRUE`, the function includes a data.frame (`sums`)
detailing the position and size of each window's sum, in addition to the vector of sums
(`res`). If `FALSE` (default), only the vector of sums (`res`) is returned.}
}
\value{
A list containing the data frame (`res`) containing spatial variation metrics for each
  window size, including Length, Width, Size (area), number of windows, and Coefficient of
  Variation (CV). The results are ordered by Size, then Length, then Width.
}
\description{
This function computes spatial variation metrics (e.g., coefficient of variation) for all
possible rectangular sliding windows over a numeric matrix.
It iterates through various window heights and widths, calculates sums using
`sliding_window_sum`, and then derives the coefficient of variation from these sums.
}
\examples{
# Create a sample matrix
set.seed(420)
rows <- 7
cols <- 13
sample_matrix <- matrix(rnorm(rows * cols, 500, 60), nrow = rows, ncol = cols)

# Calculate exhaustive spatial variation
sv_results <- spatial_variation_exhaustive(sample_matrix)
print(sv_results)

# Calculate with specific max_area and no orientation combining
sv_results_subset <- spatial_variation_exhaustive(
  sample_matrix,
  combine_orientations = FALSE, max_area = 20
)
print(sv_results_subset)

}
