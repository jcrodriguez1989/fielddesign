% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_cv_contour.R
\name{plot_cv_contour}
\alias{plot_cv_contour}
\title{Plot Contour of Predicted Coefficient of Variation (CV)}
\usage{
plot_cv_contour(
  fit,
  nr,
  nc,
  title = "CV Contour",
  xlab = "Length (number of plots)",
  ylab = "Width (number of plots)",
  mark = NULL,
  mark_col = "red",
  mark_lab = NULL
)
}
\arguments{
\item{fit}{A fitted model object (e.g., from `fit_exhaustive_optimal_plot_size`) that can
predict CV values.}

\item{nr}{An integer, specifying the maximum number of rows (Length) for the grid.}

\item{nc}{An integer, specifying the maximum number of columns (Width) for the grid.}

\item{title}{A character string for the main title of the plot.}

\item{xlab}{A character string for the x-axis label.}

\item{ylab}{A character string for the y-axis label.}

\item{mark}{A data frame with at least 'Length' and 'Width' columns, specifying points to mark
on the plot.}

\item{mark_col}{A character string, the color to use for the marked points.}

\item{mark_lab}{A character string, a label to display near the first marked point.}
}
\value{
A `ggplot` object, representing the generated CV contour plot.
}
\description{
This function generates a filled contour plot visualizing the predicted Coefficient of Variation
(CV) across a grid of Length and Width values, based on a provided fitted model. It can
optionally highlight specific points on the contour.
}
\examples{
\dontrun{
# Assuming 'my_data' contains 'Length', 'Width', and 'CV' columns
# And a model 'cv_model' has been fitted,
# e.g., cv_model <- lm(CV ~ Length + Width, data = my_data)

# Basic contour plot
# plot_cv_contour(cv_model, nr = 10, nc = 10)

# Contour plot with a marked point
# marked_point <- data.frame(Length = 5, Width = 7)
# plot_cv_contour(cv_model, nr = 10, nc = 10, mark = marked_point, mark_lab = "Optimal Design")
}

}
